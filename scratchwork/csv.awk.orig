#!/usr/bin/gawk -f

BEGIN {
    # From https://www.gnu.org/software/gawk/manual/html_node/Splitting-By-Content.html
    FPAT = "([^" FS "]+)|(\"[^\"]+\")"

    csv[""] = 0

    getline
    headers = $0
    NR = 0
    for ( i = 1; i <= NF; i++ ) {
        if ($i == "") {
            print "ERROR: blank field name at position " i " in header" > "/dev/stderr"
            exit 1
        }
        if ($i in csv) {
            print "ERROR: duplicate field name: " $i > "/dev/stderr"
            exit 1
        }
        csv[$i] = i
    }

    do_collect_columns = 0
    do_collect_rows = 0
}

function collect_rows()    { do_collect_rows = 1 }
function collect_columns() { do_collect_columns = 1 }

do_collect_rows == 1 { rows[NR] = $0 }

do_collect_columns == 1 {
    __column_separator = NR > 1 ?
      FS : ""
    for (field_name in csv) {
        if (field_name != "")
            columns[field_name] = columns[field_name] __column_separator $csv[field_name]
    }
    __column_separator = 0
}

function load_row (LOAD_ROW, ROW_NUM, __temp_row) {
    if (ROW_NUM == "") ROW_NUM = 0
    if (ROW_NUM <= 0) ROW_NUM += NR

    if (ROW_NUM == NR) {
        delete LOAD_ROW
        for (field_name in csv) LOAD_ROW[field_name] = $csv[field_name]
        return
    }

    if (do_collect_rows != 1) {
        print "ERROR: load_row called for non-current row without collect_rows being called" > "/dev/stderr"
        exit 1
    }

    delete LOAD_ROW
    split(rows[ROW_NUM], __temp_row)
    for (field_name in csv) LOAD_ROW[field_name] = __temp_row[csv[field_name]]
    delete __temp_row
}

function load_column (LOAD_COLUMN, COL_NAME) {
    if (do_collect_columns != 1) {
        print "ERROR: load_column called without collect_columns being called" > "/dev/stderr"
        exit 1
    }

    delete LOAD_COLUMN
    split(columns[COL_NAME], LOAD_COLUMN)
}

function cell(COL_NAME, ROW_NUM, temp_ary) {
    if (ROW_NUM == "") ROW_NUM = 0
    if (ROW_NUM <= 0) ROW_NUM += NR

    if (ROW_NUM == NR) return $csv[COL_NAME]

    if ((do_collect_rows != 1) && (do_collect_columns != 1)) {
        print "ERROR: cell called for non-current row without collect_rows or collect_columns being called" > "/dev/stderr"
        exit 1
    }

    if (do_collect_rows == 1) {
        split(rows[ROW_NUM], temp_ary)
        return temp_ary[csv[COL_NAME]]
    } else {
        split(columns[COL_NAME], temp_ary)
        return temp_ary[ROW_NUM]
    }
}
