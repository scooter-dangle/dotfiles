# .tmux.conf
# So many colors
set -g default-terminal "screen-256color"

# Reload the file with Prefix r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# happy little fishies
if-shell -b "test -e /usr/bin/fish" "set -g default-shell /usr/bin/fish"
if-shell -b "test -e /usr/local/bin/fish" "set -g default-shell /usr/local/bin/fish"
# set -g default-command /usr/local/bin/fish
# for Mac OS X only (causing issues in ubuntu)
if-shell -b "uname | grep --ignore-case --quiet darwin" "set -g default-command 'reattach-to-user-namespace -l fish'"

# Setting the prefix from C-b to C-s
set -g prefix C-s

# Free the original Ctrl-b prefix keybinding
# unbind-key C-b
unbind C-b

# Ensure that we can send Ctrl-S to other apps
bind C-s send-prefix

# setting the delay between prefix and command
set -sg escape-time 1

# toggle synchronize panes
bind e set-option synchronize-panes

# Experimental settings for fish (Need to find out how to restrict them just to fish, though)
# bind "'" send C-f
# bind Enter send C-f 'enter'

# Create new sessions so fast!
bind C new-session -c '#{pane_current_path}'

# Set the base index for windows to 1 instead of 0
# Useful in that hitting prefix and then number
# doesn't require a weird finger jump between first
# and second windows.
set -g base-index 1

# Re-order windows so current window is first
bind-key T swap-window -t 1

# Keep windows indexed without gaps
set -g renumber-windows on

# Necessary starting with tmux 1.9, according to stack*.com
bind c new-window -c '#{pane_current_path}'

# splitting panes
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# moving between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# rejoin panes
# bind-key < command-prompt -p "join pane from window number:" -I'#(math "#I + 1" > /tmp/blergo.test)' "join-pane -s ':%1'"
# bind-key > command-prompt -p "send pane to window number:" -I'#(math "#I + 1" > /tmp/blergo.test)' "join-pane -t ':%1'"
bind-key < command-prompt -p "join pane from window number:" "join-pane -s ':%1'"
bind-key > command-prompt -p "send pane to window number:" "join-pane -t ':%1'"

# make choose-tree pre-expand everything
bind s choose-tree -u

# vi keys!!! w00t!!!
#set-option status-keys vi
# Used to be the line above... when did this change?
# Also, isn't tmux supposed to decide this based on the value of $EDITOR ?
setw -g mode-keys vi

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# Resizors
bind -r     C-k resize-pane -U 1
bind -r     C-j resize-pane -D 1
bind -r     C-h resize-pane -L 1
bind -r     C-l resize-pane -R 1

# Enable mousker use if desired
if-shell -b "test -e ~/.TMUX_MOUSE_TRUE" "set -g mouse-resize-pane on ; set -g mouse-select-pane on ; set -g mouse-select-window on"
bind M set -g mouse-resize-pane on \; set -g mouse-select-pane on \; set -g mouse-select-window on \; display "Mouse on."
bind m set -g mouse-resize-pane off\; set -g mouse-select-pane off\; set -g mouse-select-window off\; display "Mouse off."

# Almost all of the following is copied verbatim from http://zanshin.net/2013/09/05/my-tmux-configuration/
# (Thanks, friend! These colors are so nice!)

# setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
if-shell 'uname | grep --ignore-case darwin' 'bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"'

# update default binding of 'Enter' to also use copy-pipe
if-shell 'uname | grep --ignore-case darwin' 'unbind -t vi-copy Enter'
if-shell 'uname | grep --ignore-case darwin' 'bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"'

if-shell 'uname | grep --ignore-case darwin' 'bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy "'
if-shell 'uname | grep --ignore-case darwin' 'bind C-y run "tmux save-buffer - | reattach-to-user-namespace pbcopy "'

# ----------------------
# set some pretty colors
# ----------------------
# set pane colors - hilight the active pane
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# colorize messages in the command line
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
set -g status-utf8 on                  # set utf-8 for the status bar
set -g status-interval 4               # set update frequency (default 15 seconds)
set -g status-justify centre           # center window list for clarity
# set-option -g status-position top    # position the status bar at top of screen

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# set color for status bar
set-option -g status-bg colour235 #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr dim

# set window list colors - red for active and cyan for inactive
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg colour236
set-window-option -g window-status-attr dim

set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg colour236
set-window-option -g window-status-current-attr bright


# Status bar stuffs
set -g status-left-length 80
set -g status-left "#[fg=green]: #h : #[fg=brightblue]#(curl -4 https://icanhazip.com 2>/dev/null) : #[fg=yellow]#(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2 \" : \"}')#(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2 \" : \"}')#[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2 \" : \"}')"
# set -g status-left "#[fg=green]: #h : #[fg=brightblue]#(curl -4 https://icanhazip.com 2>/dev/null) : #[fg=yellow]#(ifconfig en0 | grep 'inet ' | awk '{print \"en0 : \"}')#(ifconfig en1 | grep 'inet ' | awk '{print \"en1 : \" $2}')#[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn : \" $2}')#[fg=magenta]#(docker ps --all | tail -n '+2' | wc -l | sed 's/ //g')#[fg=yellow]#(docker ps | tail -n '+2' | wc -l | sed 's/ //g' | sed 's/^\\\\(4\\\\)$/9/' | sed 's/^\\(.*\\)$/[\\1 8]/')"

set -g status-right-length 60
# set -g status-right "#[fg=magenta]#(\[ $\\(boot2docker status\\) = running \] && docker images | tail -n +2 | wc -l | tr -d ' ')#(\[ $\\(boot2docker status\\) = running \] && boot2docker ssh df | grep '/dev/sda1' | head -n 1 | awk '{ printf \" \\(%%s\\\)  \", $5}')#(\[ $\\(boot2docker status\\) = running \] && docker ps --all | tail -n '+2' | wc -l | tr -d ' ')#[fg=bold]#(\[ $\\(boot2docker status\\) = running \] && docker ps | tail -n '+2' | wc -l | tr -d ' ' | sed 's#\\\\(^.*$\\\\\)#\[\\\\1\] :: #')#[fg=blue]#S #I:#P #[fg=yellow]:: %d %b %Y #[fg=green]:: %l:%M %p ::"
# set -g status-right "#[fg=magenta]#([ \$(boot2docker status) = running ] && docker images | tail -n +2 | wc -l | tr -d ' ')#([ \$(boot2docker status) = running ] && boot2docker ssh df | grep '/dev/sda1' | head -n 1 | awk '{ printf \" \\(%%s\\\)  \", $5}')#([ \$(boot2docker status) = running ] && docker ps --all | tail -n '+2' | wc -l | tr -d ' ')#[fg=bold]#([ \$(boot2docker status) = running ] && docker ps | tail -n '+2' | wc -l | tr -d ' ' | sed 's#\\(^.*$\\)#[\\1] :: #')#[fg=blue]#S #I:#P #[fg=yellow]:: %b %d, %Y #[fg=green]:: %l:%M %p ::"
set -g status-right "#[fg=magenta]#([ \$(boot2docker status) = running ] && docker images | tail -n +2 | wc -l | tr -d ' ')#([ \$(boot2docker status) = running ] && boot2docker ssh df | grep '/dev/sda1' | head -n 1 | awk '{ printf \" \\(%%s\\\)  \", $5}')#([ \$(boot2docker status) = running ] && docker ps --all | tail -n '+2' | wc -l | tr -d ' ')#[fg=bold]#([ \$(boot2docker status) = running ] && docker ps | tail -n '+2' | wc -l | tr -d ' ' | sed 's#\\(^.*$\\)#[\\1] :: #')#[fg=purple]#(sysctl machdep.xcpm.cpu_thermal_level | cut --fields 2 --delimiter ' ') #[fg=blue]:: #S #I:#P #[fg=yellow]:: %b %d, %Y #[fg=green]:: %l:%M %p ::"
